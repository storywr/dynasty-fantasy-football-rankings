{
  "_args": [
    [
      {
        "raw": "strong-data-uri@^1.0.0",
        "scope": null,
        "escapedName": "strong-data-uri",
        "name": "strong-data-uri",
        "rawSpec": "^1.0.0",
        "spec": ">=1.0.0 <2.0.0",
        "type": "range"
      },
      "/home/bill/fantasy-football-scout/node_modules/node-inspector"
    ]
  ],
  "_from": "strong-data-uri@>=1.0.0 <2.0.0",
  "_id": "strong-data-uri@1.0.4",
  "_inCache": true,
  "_location": "/strong-data-uri",
  "_nodeVersion": "4.4.3",
  "_npmOperationalInternal": {
    "host": "packages-16-east.internal.npmjs.com",
    "tmp": "tmp/strong-data-uri-1.0.4.tgz_1462320267028_0.43716702749952674"
  },
  "_npmUser": {
    "name": "rmg",
    "email": "r.m.graham@gmail.com"
  },
  "_npmVersion": "3.8.8",
  "_phantomChildren": {},
  "_requested": {
    "raw": "strong-data-uri@^1.0.0",
    "scope": null,
    "escapedName": "strong-data-uri",
    "name": "strong-data-uri",
    "rawSpec": "^1.0.0",
    "spec": ">=1.0.0 <2.0.0",
    "type": "range"
  },
  "_requiredBy": [
    "/node-inspector"
  ],
  "_resolved": "https://registry.npmjs.org/strong-data-uri/-/strong-data-uri-1.0.4.tgz",
  "_shasum": "136765ebaf8e0f4ad60c4b146779f062c29d18f0",
  "_shrinkwrap": null,
  "_spec": "strong-data-uri@^1.0.0",
  "_where": "/home/bill/fantasy-football-scout/node_modules/node-inspector",
  "author": {
    "name": "Miroslav Bajtos",
    "email": "miroslav@strongloop.com"
  },
  "bugs": {
    "url": "https://github.com/strongloop/strong-data-uri/issues"
  },
  "dependencies": {
    "truncate": "~1.0.2"
  },
  "description": "Parser and builder for `data:` URIs",
  "devDependencies": {
    "chai": "~1.8.1",
    "istanbul": "~0.2.4",
    "jshint": "~2.4.3",
    "mocha": "~1.17.1"
  },
  "directories": {},
  "dist": {
    "shasum": "136765ebaf8e0f4ad60c4b146779f062c29d18f0",
    "tarball": "https://registry.npmjs.org/strong-data-uri/-/strong-data-uri-1.0.4.tgz"
  },
  "engines": {
    "node": ">=0.8.0"
  },
  "gitHead": "afe6eff520c576c66c3d85997cbc0a862fc84e32",
  "homepage": "https://github.com/strongloop/strong-data-uri#readme",
  "license": "Artistic-2.0",
  "main": "index.js",
  "maintainers": [
    {
      "name": "bajtos",
      "email": "mbajtoss@gmail.com"
    },
    {
      "name": "chandadharap",
      "email": "chanda_dharap@yahoo.com"
    },
    {
      "name": "ibmcloud-admin",
      "email": "rmg@ca.ibm.com"
    },
    {
      "name": "kraman",
      "email": "kraman@gmail.com"
    },
    {
      "name": "octet",
      "email": "vieuxtech@gmail.com"
    },
    {
      "name": "rfeng",
      "email": "enjoyjava@gmail.com"
    },
    {
      "name": "ritch",
      "email": "skawful@gmail.com"
    },
    {
      "name": "rmg",
      "email": "r.m.graham@gmail.com"
    },
    {
      "name": "strongloop",
      "email": "strngops@us.ibm.com"
    }
  ],
  "name": "strong-data-uri",
  "optionalDependencies": {},
  "readme": "# strong-data-uri\n\n[![Build Status](https://travis-ci.org/strongloop/strong-data-uri.png?branch=master)](https://travis-ci.org/strongloop/strong-data-uri)\n[![NPM version](https://badge.fury.io/js/strong-data-uri.png)](http://badge.fury.io/js/strong-data-uri)\n\n## Overview\nstrong-data-uri implements a parser for retrieving data encoded\nin `data:` URIs specified by [RFC2397](http://www.ietf.org/rfc/rfc2397.txt),\nas well as an encoder for those URIs.\n\n## API\n\n - [decode](#decodeuri)\n - [encode](#encodedata-mediatype)\n\n### decode(uri)\n\nCall `dataUri.decode(uri)` to parse the payload of a data URI. The `uri`\nargument expects a string.\n\n```js\nvar dataUri = require('strong-data-uri');\nvar uri = 'data:text/plain;charset=iso-8859-1;base64,aGVsbG8gd29ybGQ=';\n\nvar buffer = dataUri.decode(uri);\nconsole.log(buffer);\n// <Buffer 68 65 6c 6c 6f 20 77 6f 72 6c 64>\nconsole.log(buffer.toString('ascii'));\n// Hello world\n\nconsole.log(buffer.mimetype);  // text/plain\nconsole.log(buffer.mediatype); // text/plain;charset=iso-8859-1\nconsole.log(buffer.charset);   // iso-8859-1\n```\n\n### encode(data, [mediatype])\n\nUse `dataUri.encode(data, mediatype)` to build a new data URI. The `data`\nargument can be a `Buffer` or a `String`. Strings are converted to buffers\nusing `utf-8` encoding.\n\nIf `mediatype` is not specified, then `application/octet-stream` is used\nas a default if the data is a Buffer, and `text/plain;charset=UTF-8` if\nthe data is a String.\n\n```js\nvar dataUri = require('strong-data-uri');\n\nuri = dataUri.encode('foo');\nconsole.log(uri);\n// data:text/plain;charset=UTF-8;base64,Zm9v\n\nuri = dataUri.encode(new Buffer('<foo/>', 'utf8'), 'text/xml');\nconsole.log(uri);\n// data:text/xml;base64,PGZvby8+\n```\n\n## Command-line access\n\nTo keep this project small and light, no command-line tool is provided.  If you\nneed one, please consider [data-colon](https://github.com/hildjj/data-colon).\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/strongloop/strong-data-uri.git"
  },
  "scripts": {
    "posttest": "test -z $npm_config_coverage || istanbul report",
    "pretest": "jshint *.js test",
    "test": "istanbul test -- _mocha -R spec"
  },
  "version": "1.0.4"
}
