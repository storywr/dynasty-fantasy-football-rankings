{
  "_args": [
    [
      {
        "raw": "win-detect-browsers@^1.0.1",
        "scope": null,
        "escapedName": "win-detect-browsers",
        "name": "win-detect-browsers",
        "rawSpec": "^1.0.1",
        "spec": ">=1.0.1 <2.0.0",
        "type": "range"
      },
      "/home/bill/fantasy-football-scout/node_modules/browser-launcher2"
    ]
  ],
  "_from": "win-detect-browsers@>=1.0.1 <2.0.0",
  "_id": "win-detect-browsers@1.0.2",
  "_inCache": true,
  "_location": "/win-detect-browsers",
  "_nodeVersion": "0.10.35",
  "_npmUser": {
    "name": "vweevers",
    "email": "dev@vincentweevers.nl"
  },
  "_npmVersion": "2.1.16",
  "_phantomChildren": {},
  "_requested": {
    "raw": "win-detect-browsers@^1.0.1",
    "scope": null,
    "escapedName": "win-detect-browsers",
    "name": "win-detect-browsers",
    "rawSpec": "^1.0.1",
    "spec": ">=1.0.1 <2.0.0",
    "type": "range"
  },
  "_requiredBy": [
    "/browser-launcher2"
  ],
  "_resolved": "https://registry.npmjs.org/win-detect-browsers/-/win-detect-browsers-1.0.2.tgz",
  "_shasum": "f45f10d141086c5d94ae14c03b2098440a7e71b0",
  "_shrinkwrap": null,
  "_spec": "win-detect-browsers@^1.0.1",
  "_where": "/home/bill/fantasy-football-scout/node_modules/browser-launcher2",
  "author": {
    "name": "Vincent Weevers"
  },
  "bin": {
    "win-detect-browsers": "./bin/detect-browsers"
  },
  "bugs": {
    "url": "https://github.com/vweevers/win-detect-browsers/issues"
  },
  "dependencies": {
    "after": "^0.8.1",
    "debug": "^2.1.0",
    "which": "^1.0.7",
    "xtend": "^4.0.0",
    "yargs": "^1.3.3"
  },
  "description": "Detect browsers on Windows",
  "devDependencies": {
    "phantomjs": "^1.9.12",
    "tape": "^3.0.3"
  },
  "directories": {},
  "dist": {
    "shasum": "f45f10d141086c5d94ae14c03b2098440a7e71b0",
    "tarball": "https://registry.npmjs.org/win-detect-browsers/-/win-detect-browsers-1.0.2.tgz"
  },
  "gitHead": "6c5a2e9c02ec430eac54d964bd0fb7ac9d08c87c",
  "homepage": "https://github.com/vweevers/win-detect-browsers",
  "keywords": [
    "browser",
    "detect",
    "windows"
  ],
  "license": "MIT",
  "main": "index.js",
  "maintainers": [
    {
      "name": "vweevers",
      "email": "dev@vincentweevers.nl"
    }
  ],
  "name": "win-detect-browsers",
  "optionalDependencies": {},
  "readme": "# win-detect-browsers\r\n\r\n> Detects installed versions of Chrome, Firefox, Phantomjs (local and global), Internet Explorer, Safari and Opera. Supports Windows XP and up.\r\n\r\n[![Build status](https://img.shields.io/appveyor/ci/vweevers/win-detect-browsers.svg?style=flat-square)](https://ci.appveyor.com/project/vweevers/win-detect-browsers) [![Dependency Status](https://img.shields.io/david/vweevers/win-detect-browsers.svg?style=flat-square)](https://david-dm.org/vweevers/win-detect-browsers)\r\n\r\n[Command line](#command-line) / [API](#api) / [License](#license)\r\n\r\n## About\r\n\r\nBasically, browser detection on Windows can't be done right. This is the *try-everything-and-fail-silently* approach. It accounts for x64/86 differences, normalizes environment variables, tries default locations, searches the registry (in the HKLM and HKCU hives), checks [Start Menu Internet Applications](http://msdn.microsoft.com/en-us/library/windows/desktop/dd203067(v=vs.85).aspx) and looks in `PATH`. After gathering paths, version numbers are either read from the executable metadata using `wmic` or with `browser -v`.\r\n\r\n`browser-launcher` by substack has [poor Windows support](https://github.com/substack/browser-launcher/issues/7), and it prompted me to create this module. It is now used in [browser-launcher2](https://github.com/benderjs/browser-launcher2), an active fork of `browser-launcher`.\r\n\r\n## Command line\r\n\r\nInstall globally and run:\r\n\r\n    npm i win-detect-browsers -g\r\n    win-detect-browsers\r\n\r\nExample output on Windows XP:\r\n\r\n    chrome 39.0.2171.71\r\n      @ C:\\Program Files\\Google\\Chrome\\Application\\chrome.exe\r\n    firefox 33.0.2\r\n      @ C:\\Program Files\\Mozilla Firefox\\firefox.exe\r\n    ie 8.00.6001.18702\r\n      @ C:\\Program Files\\Internet Explorer\\iexplore.exe\r\n    opera 26.0.1656.24\r\n      @ C:\\Program Files\\Opera\\Launcher.exe\r\n    opera 26.0.1656.20\r\n      @ C:\\Program Files\\Opera beta\\Launcher.exe\r\n    opera 27.0.1689.2\r\n      @ C:\\Program Files\\Opera developer\\Launcher.exe\r\n    phantomjs 1.9.8\r\n      @ C:\\Documents and Settings\\..\\Application Data\\npm\\phantomjs.CMD\r\n\r\nEnable debug with `SET DEBUG=win-detect-browsers`.\r\n\r\n### examples\r\n\r\nDetect Internet Explorer and Phantomjs, without version numbers:\r\n\r\n    win-detect-browsers --no-version ie phantomjs\r\n\r\nReturn first found version of FF:\r\n\r\n    win-detect-browsers --lucky firefox\r\n\r\n## API\r\n\r\n`detect([names, opts,] cb)`\r\n\r\nWhere `names` is an array of browser names you want to find. If omitted, it will detect all browsers. Available options are:\r\n\r\n- `boolean lucky` whether to end the search for a browser after the first result. Note that this result is not consistent, because search is asynchronous. Defaults to `false`, meaning: find all versions.\r\n- `boolean version` whether to get version numbers, defaults to `true`.\r\n\r\n## examples\r\n\r\nDetect *[everything](http://youtu.be/k1yvvNvlXtg)*:\r\n\r\n```js\r\nvar detect = require('win-detect-browsers')\r\n\r\ndetect(function(browsers){\r\n  var format = \"\\n%s %s\\n  @ %s\"\r\n  browsers.forEach(function(b){\r\n    console.log(format, b.name, b.version, b.path)\r\n  })\r\n})\r\n\r\n```\r\n\r\nDetect only Chrome and IE, without version numbers:\r\n\r\n```js\r\ndetect(['chrome', 'ie'], {version: false}, cb)\r\n```\r\n\r\n## License\r\n\r\n[MIT](http://opensource.org/licenses/MIT) Â© [Vincent Weevers](http://vincentweevers.nl)\r\n",
  "readmeFilename": "readme.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/vweevers/win-detect-browsers.git"
  },
  "scripts": {
    "test": "tape test.js"
  },
  "version": "1.0.2"
}
